#include <iostream>
#include <climits>

int divide(int dividend, int divisor) {
 
    if (dividend == INT_MIN && divisor == -1) {
        return INT_MAX;
    }

    int sign = (dividend < 0) ^ (divisor < 0) ? -1 : 1;

    long long ldividend = std::abs(static_cast<long long>(dividend));
    long long ldivisor = std::abs(static_cast<long long>(divisor));

    long long result = 0;

    while (ldividend >= ldivisor) {
        long long temp = ldivisor;
        long long multiple = 1;

        while (ldividend >= (temp << 1)) {
            temp <<= 1;
            multiple <<= 1;
        }

        ldividend -= temp;
        result += multiple;
    }

    return static_cast<int>(result * sign);
}

int main() {
    int dividend = 10;
    int divisor = 3;

    int result = divide(dividend, divisor);

    std::cout << "Result of division: " << result << std::endl;

    return 0;
}
