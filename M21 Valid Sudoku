#include <iostream>
#include <vector>
#include <unordered_set>

bool isValidSudoku(std::vector<std::vector<char>>& board) {
    std::unordered_set<std::string> seen;

    for (int i = 0; i < 9; ++i) {
        for (int j = 0; j < 9; ++j) {
            char current = board[i][j];
            if (current != '.') {
               
                std::string rowKey = "row " + std::to_string(i) + " " + current;
                std::string colKey = "col " + std::to_string(j) + " " + current;
                std::string subgridKey = "subgrid " + std::to_string(i / 3) + " " + std::to_string(j / 3) + " " + current;

                if (seen.count(rowKey) || seen.count(colKey) || seen.count(subgridKey)) {
                    return false;
                }

                seen.insert(rowKey);
                seen.insert(colKey);
                seen.insert(subgridKey);
            }
        }
    }

    return true;
}

int main() {
    std::vector<std::vector<char>> sudokuBoard = {
        {'5','3','.','.','7','.','.','.','.'},
        {'6','.','.','1','9','5','.','.','.'},
        {'.','9','8','.','.','.','.','6','.'},
        {'8','.','.','.','6','.','.','.','3'},
        {'4','.','.','8','.','3','.','.','1'},
        {'7','.','.','.','2','.','.','.','6'},
        {'.','6','.','.','.','.','2','8','.'},
        {'.','.','.','4','1','9','.','.','5'},
        {'.','.','.','.','8','.','.','7','9'}
    };

    bool isValid = isValidSudoku(sudokuBoard);

    std::cout << "The Sudoku board is " << (isValid ? "valid." : "not valid.") << std::endl;

    return 0;
}
