#include <iostream>
#include <vector>
#include <algorithm>
#include <climits>

int threeSumClosest(std::vector<int>& nums, int target) {
    std::sort(nums.begin(), nums.end());

    int closestSum = INT_MAX;
    int minDiff = INT_MAX;

    for (int i = 0; i < nums.size() - 2; ++i) {
        int left = i + 1, right = nums.size() - 1;

        while (left < right) {
            int currentSum = nums[i] + nums[left] + nums[right];
            int currentDiff = std::abs(currentSum - target);

            if (currentDiff < minDiff) {
                minDiff = currentDiff;
                closestSum = currentSum;
            }

            (currentSum < target) ? left++ : right--;
        }
    }

    return closestSum;
}

int main() {
    std::vector<int> nums = {-1, 2, 1, -4};
    int target = 1;

    int closestSum = threeSumClosest(nums, target);

    std::cout << "Closest sum to " << target << " is: " << closestSum << std::endl;

    return 0;
}
