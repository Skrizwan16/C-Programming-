#include <bits/stdc++.h>
using namespace std;

const int MOD = 1e9 + 7;

int dp[1000001][6];

int recur(int i, int j, int N, int id[])
{


	if (i == N) {
		return 1;
	}

	if (dp[i][j] != -1)
		return dp[i][j];

	int ans = 0;

	for (int k = 1; k <= 26; k++) {

		if (i == 0 and k == 1)
			continue;

		if (i == N - 1 and k == 26)
			continue;

	
		if (i <= 1) {

			if (id[k])
				ans += recur(i + 1, (2 * j) | 1, N, id);


			else
				ans += recur(i + 1, 2 * j, N, id);
		}
		else {

	
			ans += recur(i + 1, (2 * j) | 1, N, id);

			if (j != 1)
				ans += recur(i + 1, 2 * j, N, id);
		}
	}

	return dp[i][j] = ans;
}


int countWaysTo(int N)
{

	memset(dp, -1, sizeof(dp));

	int id[27];

	for (int i = 1; i <= 26; i++) {

	
		if (i == 1 | i == 5 | i == 9 | i == 15 | i == 21)
			id[i] = 1;
		else
			id[i] = 2;
	}

	return recur(0, 0, N, id);
}


int main()
{
	
	int N = 1;

	cout << countWaysTo(N) << endl;


	int N1 = 2;

	cout << countWaysTo(N1) << endl;
	return 0;
}
