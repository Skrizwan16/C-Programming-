#include <iostream>

struct ListNode {
    int val;
    ListNode* next;
    ListNode(int x) : val(x), next(nullptr) {}
};

ListNode* swapPairs(ListNode* head) {
    ListNode* dummy = new ListNode(0);
    dummy->next = head;
    ListNode* current = dummy;

    while (current->next != nullptr && current->next->next != nullptr) {
        ListNode* first = current->next;
        ListNode* second = current->next->next;

        first->next = second->next;
        second->next = first;
        current->next = second;

        current = current->next->next;
    }

    return dummy->next;
}

void printList(ListNode* head) {
    while (head != nullptr) {
        std::cout << head->val << " -> ";
        head = head->next;
    }
    std::cout << "nullptr" << std::endl;
}

int main() {
    ListNode* head = new ListNode(1);
    head->next = new ListNode(2);
    head->next->next = new ListNode(3);
    head->next->next->next = new ListNode(4);

    std::cout << "Original linked list: ";
    printList(head);

    head = swapPairs(head);

    std::cout << "Linked list after swapping pairs: ";
    printList(head);

    return 0;
}
