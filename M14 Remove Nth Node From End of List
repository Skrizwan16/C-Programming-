#include <iostream>

// Definition for singly-linked list.
struct ListNode {
    int val;
    ListNode* next;
    ListNode(int x) : val(x), next(nullptr) {}
};

ListNode* removeNthFromEnd(ListNode* head, int n) {
    ListNode* dummy = new ListNode(0);
    dummy->next = head;

    ListNode* first = dummy;
    ListNode* second = dummy;

   
    for (int i = 0; i <= n; ++i) {
        first = first->next;
    }

    while (first != nullptr) {
        first = first->next;
        second = second->next;
    }

    second->next = second->next->next;

    return dummy->next;
}

int main() {

    ListNode* head = new ListNode(1);
    head->next = new ListNode(2);
    head->next->next = new ListNode(3);
    head->next->next->next = new ListNode(4);
    head->next->next->next->next = new ListNode(5);

    int n = 2;

    std::cout << "Original linked list: ";
    for (ListNode* current = head; current != nullptr; current = current->next) {
        std::cout << current->val << " -> ";
    }
    std::cout << "nullptr" << std::endl;

    head = removeNthFromEnd(head, n);

    std::cout << "Linked list after removing " << n << "th node from end: ";
    for (ListNode* current = head; current != nullptr; current = current->next) {
        std::cout << current->val << " -> ";
    }
    std::cout << "nullptr" << std::endl;

    return 0;
}
